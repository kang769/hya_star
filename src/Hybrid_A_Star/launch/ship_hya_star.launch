<?xml version="1.0"?>
<launch>
    <arg name="fixed_frame" default="world"/>
    <arg name="namespace" default="wamv"/>

    <!-- Load WAM-V model with components -->
    <param name="robot_description" command="$(find xacro)/xacro '$(find hybrid_a_star)/model/ship_model/wamv_description/urdf/wamv_base.urdf.xacro' namespace:=$(arg namespace) urdf_extras:='$(find hybrid_a_star)/model/ship_model/wamv_description/urdf/wamv_components.urdf.xacro'"/>
    
    <!-- Start joint and robot state publishers -->
    <node pkg="joint_state_publisher" type="joint_state_publisher" name="joint_state_publisher">
        <param name="rate" value="30"/>
    </node>
    <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher">
        <param name="publish_frequency" value="30"/>
    </node>

    <!-- Launch RViz with custom config -->
    <node pkg="rviz" type="rviz" name="rviz" args="-d $(find hybrid_a_star)/rviz/display_hybrid_astar.rviz"/>

    <!--static_transform_publisher x y z yaw pitch roll frame_id child_frame_id period_in_ms-->
    <node pkg="tf" type="static_transform_publisher" name="link1_broadcaster"
          args="0 0 0 0 0 0 world map 100"/>

    <node pkg="map_server" type="map_server" name="map_server" args="$(find hybrid_a_star)/maps/scans.yaml"/>

    <!-- Create a TF link between the ground_link and the WAM-V base_link -->
    <!-- This makes the ship model follow the path since the original code uses ground_link -->
    <node pkg="tf" type="static_transform_publisher" name="ground_to_wamv_link"
          args="0 0 0 0 0 0 ground_link $(arg namespace)/base_link 10"/>

    <!-- Start Hybrid A* planner with WAM-V parameters -->
    <node pkg="hybrid_a_star" type="run_hybrid_astar" name="run_hybrid_astar" output="screen">
        <!-- Adjusted parameters for WAM-V -->
        <param name="planner/steering_angle" value="30.0"/>
        <param name="planner/steering_angle_discrete_num" value="1"/>
        <param name="planner/wheel_base" value="4.0"/>
        <param name="planner/segment_length" value="2.0"/>
        <param name="planner/segment_length_discrete_num" value="8"/>
        <param name="planner/steering_penalty" value="1.5"/>
        <param name="planner/reversing_penalty" value="3.0"/>
        <param name="planner/steering_change_penalty" value="2.0"/>
        <param name="planner/shot_distance" value="8.0"/>
    </node>

</launch>
